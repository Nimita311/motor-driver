/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.1 */

#ifndef PB_INFO_PB_H_INCLUDED
#define PB_INFO_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _PIDInfo {
    float e;
    float e_real;
    float x;
    float x_real;
    float y;
    float y_real;
    bool anti_windup_active;
} PIDInfo;

typedef struct _Info {
    uint32_t timestamp;
    uint32_t id;
    pb_size_t which_content;
    union {
        PIDInfo pid_info;
    } content;
} Info;


/* Initializer values for message structs */
#define Info_init_default                        {0, 0, 0, {PIDInfo_init_default}}
#define PIDInfo_init_default                     {0, 0, 0, 0, 0, 0, 0}
#define Info_init_zero                           {0, 0, 0, {PIDInfo_init_zero}}
#define PIDInfo_init_zero                        {0, 0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define PIDInfo_e_tag                            1
#define PIDInfo_e_real_tag                       2
#define PIDInfo_x_tag                            3
#define PIDInfo_x_real_tag                       4
#define PIDInfo_y_tag                            5
#define PIDInfo_y_real_tag                       6
#define PIDInfo_anti_windup_active_tag           7
#define Info_pid_info_tag                        3
#define Info_timestamp_tag                       1
#define Info_id_tag                              2

/* Struct field encoding specification for nanopb */
#define Info_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   timestamp,         1) \
X(a, STATIC,   SINGULAR, UINT32,   id,                2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (content,pid_info,content.pid_info),   3)
#define Info_CALLBACK NULL
#define Info_DEFAULT NULL
#define Info_content_pid_info_MSGTYPE PIDInfo

#define PIDInfo_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    e,                 1) \
X(a, STATIC,   SINGULAR, FLOAT,    e_real,            2) \
X(a, STATIC,   SINGULAR, FLOAT,    x,                 3) \
X(a, STATIC,   SINGULAR, FLOAT,    x_real,            4) \
X(a, STATIC,   SINGULAR, FLOAT,    y,                 5) \
X(a, STATIC,   SINGULAR, FLOAT,    y_real,            6) \
X(a, STATIC,   SINGULAR, BOOL,     anti_windup_active,   7)
#define PIDInfo_CALLBACK NULL
#define PIDInfo_DEFAULT NULL

extern const pb_msgdesc_t Info_msg;
extern const pb_msgdesc_t PIDInfo_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Info_fields &Info_msg
#define PIDInfo_fields &PIDInfo_msg

/* Maximum encoded size of messages (where known) */
#define Info_size                                46
#define PIDInfo_size                             32

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
