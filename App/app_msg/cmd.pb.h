/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.1 */

#ifndef PB_CMD_PB_H_INCLUDED
#define PB_CMD_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _PIDCmd {
    bool enable_pid;
    float kp;
    float ki;
    float kd;
    bool enable_anti_windup;
    float min;
    float max;
    float ts;
    float w;
    float u;
} PIDCmd;

typedef struct _Cmd {
    uint32_t id;
    pb_size_t which_content;
    union {
        PIDCmd pid_cmd;
    } content;
} Cmd;


/* Initializer values for message structs */
#define Cmd_init_default                         {0, 0, {PIDCmd_init_default}}
#define PIDCmd_init_default                      {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define Cmd_init_zero                            {0, 0, {PIDCmd_init_zero}}
#define PIDCmd_init_zero                         {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define PIDCmd_enable_pid_tag                    1
#define PIDCmd_kp_tag                            2
#define PIDCmd_ki_tag                            3
#define PIDCmd_kd_tag                            4
#define PIDCmd_enable_anti_windup_tag            5
#define PIDCmd_min_tag                           6
#define PIDCmd_max_tag                           7
#define PIDCmd_ts_tag                            8
#define PIDCmd_w_tag                             9
#define PIDCmd_u_tag                             10
#define Cmd_pid_cmd_tag                          2
#define Cmd_id_tag                               1

/* Struct field encoding specification for nanopb */
#define Cmd_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   id,                1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (content,pid_cmd,content.pid_cmd),   2)
#define Cmd_CALLBACK NULL
#define Cmd_DEFAULT NULL
#define Cmd_content_pid_cmd_MSGTYPE PIDCmd

#define PIDCmd_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     enable_pid,        1) \
X(a, STATIC,   SINGULAR, FLOAT,    kp,                2) \
X(a, STATIC,   SINGULAR, FLOAT,    ki,                3) \
X(a, STATIC,   SINGULAR, FLOAT,    kd,                4) \
X(a, STATIC,   SINGULAR, BOOL,     enable_anti_windup,   5) \
X(a, STATIC,   SINGULAR, FLOAT,    min,               6) \
X(a, STATIC,   SINGULAR, FLOAT,    max,               7) \
X(a, STATIC,   SINGULAR, FLOAT,    ts,                8) \
X(a, STATIC,   SINGULAR, FLOAT,    w,                 9) \
X(a, STATIC,   SINGULAR, FLOAT,    u,                10)
#define PIDCmd_CALLBACK NULL
#define PIDCmd_DEFAULT NULL

extern const pb_msgdesc_t Cmd_msg;
extern const pb_msgdesc_t PIDCmd_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Cmd_fields &Cmd_msg
#define PIDCmd_fields &PIDCmd_msg

/* Maximum encoded size of messages (where known) */
#define Cmd_size                                 52
#define PIDCmd_size                              44

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
